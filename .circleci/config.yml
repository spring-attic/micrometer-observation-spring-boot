version: 2.1

executors:
  circle-jdk-executor:
    working_directory: ~/micrometer-observation-spring-boot
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    docker:
      - image: cimg/openjdk:17.0.0

commands:
  gradlew-build:
    description: 'Run a Gradle build using the wrapper'
    parameters:
      command:
        type: string
        default: 'build'
    steps:
      - checkout
      - restore_cache:
          key: gradle-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: downloadDependencies
          command: ./gradlew downloadDependencies --console=plain
      - save_cache:
          key: gradle-dependencies-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle
      - run:
          name: run gradle command
          command: ./gradlew << parameters.command >>
      - run:
          name: collect test reports
          when: always
          command: |
            mkdir -p ~/micrometer-observation-spring-boot/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/micrometer-observation-spring-boot/test-results/junit/ \;
      - store_test_results:
          path: ~/micrometer-observation-spring-boot/test-results/
      - store_artifacts:
          path: ~/micrometer-observation-spring-boot/test-results/

jobs:
  build:
    executor: circle-jdk-executor
    steps:
      - gradlew-build

  deploy:
    executor: circle-jdk-executor
    steps:
      - checkout
      - restore_cache:
          key: gradle-dependencies-{{ checksum "build.gradle" }}
      - deploy:
          name: Deployment
          command: sh ./gradle/deploy.sh

workflows:
  version: 2
  build_prs_deploy_snapshots:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - /\d+\.\d+\.x/
  build_deploy_releases:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+(-(RC|M)\d+)?$/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+(-(RC|M)\d+)?$/
